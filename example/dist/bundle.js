!function(t){var i={};function n(o){if(i[o])return i[o].exports;var e=i[o]={i:o,l:!1,exports:{}};return t[o].call(e.exports,e,e.exports,n),e.l=!0,e.exports}n.m=t,n.c=i,n.d=function(t,i,o){n.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,i){if(1&i&&(t=n(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var e in t)n.d(o,e,function(i){return t[i]}.bind(null,e));return o},n.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(i,"a",i),i},n.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},n.p="",n(n.s=0)}([function(t,i,n){"use strict";function o(t,i,n,o,e,s,h){t.beginPath(),t.moveTo(i+s,n),t.lineTo(i+o-s,n),t.quadraticCurveTo(i+o,n,i+o,n+s),t.lineTo(i+o,n+e-s),t.quadraticCurveTo(i+o,n+e,i+o-s,n+e),t.lineTo(i+s,n+e),t.quadraticCurveTo(i,n+e,i,n+e-s),t.lineTo(i,n+s),t.quadraticCurveTo(i,n,i+s,n),t.closePath(),t.stroke(),h||t.fill()}function e(t,i,n,o,e,s,h){t.textAlign="center",t.textBaseline="middle",n+=e/2,o+=s/2;for(var a=i.split("\n"),r=0;r<a.length;r++){for(var c="",g=a[r].split(" "),f=0;f<g.length;f++){var l=c+g[f]+" ";t.measureText(l).width>e?(c=g[f]+" ",o-=h/2):c=l}c="";for(f=0;f<g.length;f++){l=c+g[f]+" ";t.measureText(l).width>e?(t.fillText(c,n,o),c=g[f]+" ",o+=h):c=l}t.fillText(c,n,o),o+=h}}function s(t,i){for(var n=0;n<t.length;n++)if(t[n].id==i)return t[n];return null}n.r(i);new function(t){this.init=function(t){if(this.canvas=document.getElementById(t.config.element),!this.canvas)throw"Element not found";this.context=this.canvas.getContext("2d"),this.context=this.canvas.getContext("2d"),this.context.lineWidth=t.config.lineWidth,t.config.autoSize&&(this.canvas.width=this.canvas.parentNode.clientWidth,this.canvas.height=this.canvas.parentNode.clientHeight),function(t){var i=document.createElementNS("http://www.w3.org/2000/svg","svg"),n=i.createSVGMatrix();t.getTransform=function(){return n};var o=[],e=t.save;t.save=function(){return o.push(n.translate(0,0)),e.call(t)};var s=t.restore;t.restore=function(){return n=o.pop(),s.call(t)};var h=t.scale;t.scale=function(i,o){return n=n.scaleNonUniform(i,o),h.call(t,i,o)};var a=t.rotate;t.rotate=function(i){return n=n.rotate(180*i/Math.PI),a.call(t,i)};var r=t.translate;t.translate=function(i,o){return n=n.translate(i,o),r.call(t,i,o)};var c=t.transform;t.transform=function(o,e,s,h,a,r){var g=i.createSVGMatrix();return g.a=o,g.b=e,g.c=s,g.d=h,g.e=a,g.f=r,n=n.multiply(g),c.call(t,o,e,s,h,a,r)};var g=t.setTransform;t.setTransform=function(i,o,e,s,h,a){return n.a=i,n.b=o,n.c=e,n.d=s,n.e=h,n.f=a,g.call(t,i,o,e,s,h,a)};var f=i.createSVGPoint();t.transformedPoint=function(t,i){return f.x=t,f.y=i,f.matrixTransform(n.inverse())}}(this.context),t.config.scaleFactor=1.1,t.config.zoomScale=0,t.config.moveX=0,t.config.moveY=0,this.config=t.config,this.update(t),this.draw(),this.config.mouseEvents&&this.events()},this.addZoom=function(t){this.config.zoomScale+=t;var i=this.context.transformedPoint(this.canvas.width/2,this.canvas.height/2);this.context.translate(i.x,i.y);var n=Math.pow(this.config.scaleFactor,t);this.context.scale(n,n),this.context.translate(-i.x,-i.y),this.draw()},this.resetZoom=function(){this.addZoom(-this.config.zoomScale),this.context.translate(-this.config.moveX,-this.config.moveY),this.config.zoomScale=0,this.config.moveX=0,this.config.moveY=0},this.events=function(){var t=this,i=t.canvas.width/2,n=t.canvas.height/2,o=!1;t.canvas.addEventListener("mousedown",function(e){document.body.style.mozUserSelect=document.body.style.webkitUserSelect=document.body.style.userSelect="none",t.canvas.style.cursor="move",i=e.offsetX||e.pageX-t.canvas.offsetLeft,n=e.offsetY||e.pageY-t.canvas.offsetTop,o=t.context.transformedPoint(i,n),e.returnValue=!1},!1),t.canvas.addEventListener("mousemove",function(e){if(i=e.offsetX||e.pageX-t.canvas.offsetLeft,n=e.offsetY||e.pageY-t.canvas.offsetTop,o){var s=t.context.transformedPoint(i,n);t.context.translate(s.x-o.x,s.y-o.y),t.draw(),t.config.moveX+=s.x-o.x,t.config.moveY+=s.y-o.y}},!1),t.canvas.addEventListener("mouseup",function(i){o=null,t.canvas.style.cursor="default"},!1);var e=function(i){var n=i.wheelDelta?i.wheelDelta/300:i.detail?-i.detail:0;return t.addZoom(n),i.preventDefault()&&!1};t.canvas.addEventListener("DOMMouseScroll",e,!1),t.canvas.addEventListener("mousewheel",e,!1)},this.update=function(t){for(var i=[],n=[],o=0,e=0,h=0;h<t.diagrams.length;h++){for(var a={id:t.diagrams[h].id,x:0,y:0,cx:0,cy:0,text:t.diagrams[h].text,color:t.diagrams[h].color,bgColor:t.diagrams[h].bgColor,parents:[],children:[],virgin:!0,orphan:!0},r=0;r<t.links.length;r++)t.links[r].source==a.id&&(a.parents.push(t.links[r].parent),a.orphan=!1),t.links[r].parent==a.id&&(a.children.push(t.links[r].source),a.orphan=!1);i.push(a)}var c=function t(n,o){if(n.virgin){n.virgin=!1,n.y=o,o<e&&(e=o);for(var h=0;h<n.children.length;h++)t(s(i,n.children[h]),o+1);for(h=0;h<n.parents.length;h++)t(s(i,n.parents[h]),o-1)}};for(h=0;h<i.length;h++)c(i[h],0);for(h=0;h<i.length;h++){var g=s(n,i[h].y);null!=g?i[h].orphan||(g.count++,i[h].x=g.count,g.count>o&&(o=g.count)):i[h].orphan||(n.push({id:i[h].y,count:1}),i[h].x=1)}this.config.linesCount=n,this.config.columnsCount=o,this.config.columnLower=e,this.diagrams=i},this.draw=function(){if(this.context.transformedPoint){var t=this.context.transformedPoint(0,0),i=this.context.transformedPoint(this.canvas.width,this.canvas.height);this.context.clearRect(t.x,t.y,i.x-t.x,i.y-t.y)}else this.context.clearRect(0,0,this.canvas.width,this.canvas.height);var n=this.config.width+2*this.config.margin;0==this.config.columnsCount&&(this.config.columnsCount=parseInt(this.canvas.width/n));var h=this.config.columnsCount*n,a=parseInt(this.canvas.width)/2-h/2;this.context.rotate(2*Math.PI);for(var r=0,c=0;c<this.diagrams.length;c++)if(this.diagrams[c].orphan){var g=a+this.config.margin+parseInt(r%this.config.columnsCount)*(this.config.width+2*this.config.margin),f=this.config.margin+parseInt(r/this.config.columnsCount)*(this.config.height+2*this.config.margin);this.context.fillStyle=this.diagrams[c].bgColor,this.context.strokeStyle=this.diagrams[c].bgColor,o(this.context,g,f,this.config.width,this.config.height,this.config.radius,this.config.hiddenBg),(T=this.context).fillStyle=this.diagrams[c].color,T.font=this.config.fontSize+"px "+this.config.fontFamily,e(this.context,this.diagrams[c].text,g+this.config.padding,f,this.config.width-2*this.config.padding,this.config.height,this.config.fontSize+.2*this.config.fontSize),r++}var l=this.config.height+3*this.config.margin+parseInt((r-1)/this.config.columnsCount)*(this.config.height+2*this.config.margin);for(isNaN(l)&&(l=this.config.margin),c=0;c<this.diagrams.length;c++)if(!this.diagrams[c].orphan){var d=h/s(this.config.linesCount,this.diagrams[c].y).count;g=a+d*this.diagrams[c].x+(d/2-this.config.width/2)-d,f=l+Math.abs(this.config.columnLower)*(this.config.height+2*this.config.margin)+this.diagrams[c].y*(this.config.height+2*this.config.margin),this.diagrams[c].left=g,this.diagrams[c].top=f}for(c=0;c<this.diagrams.length;c++)if(!this.diagrams[c].orphan)for(var m=0;m<this.diagrams[c].parents.length;m++){var u=s(this.diagrams,this.diagrams[c].parents[m]),x=!1,v=!1,p=!1,w=0;this.diagrams[c].id==u.id?p=!0:this.diagrams[c].y<u.y?x=!0:this.diagrams[c].y-u.y>1&&(v=!0),this.context.setLineDash&&this.context.setLineDash([this.config.lineWidth,0]),this.context.strokeStyle=this.config.lineColor||this.diagrams[c].bgColor,this.context.fillStyle=this.config.lineColor||this.diagrams[c].bgColor;var y=0;p?(y=this.config.margin/2-this.config.margin/this.config.columnsCount*this.diagrams[c].x,isFinite(y)||(y=0),this.context.beginPath(),this.context.moveTo(u.left+this.config.width/2+-1*y-y,u.top+this.config.height),this.context.lineTo(u.left+this.config.width/2+-1*y-y,u.top+this.config.height+this.config.margin/2.5),this.context.lineTo(u.left+this.config.width/2+-1*y+y,u.top+this.config.height+this.config.margin/2.5),this.context.lineTo(u.left+this.config.width/2+-1*y+y,u.top+this.config.height+this.config.arrowWidth/2),this.context.stroke(),this.context.beginPath(),this.context.moveTo(u.left+this.config.width/2+-1*y+y,u.top+this.config.height),this.context.lineTo(u.left+this.config.width/2-this.config.arrowWidth/2+-1*y+y,u.top+this.config.height+this.config.arrowWidth),this.context.lineTo(u.left+this.config.width/2+this.config.arrowWidth/2+-1*y+y,u.top+this.config.height+this.config.arrowWidth),this.context.fill()):x?(this.config.lineDiff&&(y=this.config.margin/2-this.config.margin/this.config.columnsCount*this.diagrams[c].x+(this.config.margin-(this.config.arrowWidth+2*this.config.lineWidth*0))),this.context.setLineDash&&this.context.setLineDash([this.config.lineWidth,this.config.lineWidth]),this.context.beginPath(),this.context.moveTo(this.diagrams[c].left+this.config.width/2+y,this.diagrams[c].top+this.config.height/2+y),this.context.lineTo(this.diagrams[c].left+this.config.width+this.config.margin+y,this.diagrams[c].top+this.config.height/2+y),this.context.lineTo(this.diagrams[c].left+this.config.width+this.config.margin+y,u.top-this.config.margin+y),this.context.lineTo(u.left+this.config.width/2+y,u.top-this.config.margin+y),this.context.lineTo(u.left+this.config.width/2+y,u.top-this.config.arrowWidth+y),this.context.lineWidth=this.config.lineWidth,this.context.stroke(),this.context.beginPath(),this.context.moveTo(u.left+this.config.width/2+y,u.top),this.context.lineTo(u.left+this.config.width/2-this.config.arrowWidth/2+y,u.top-this.config.arrowWidth),this.context.lineTo(u.left+this.config.width/2+this.config.arrowWidth/2+y,u.top-this.config.arrowWidth),this.context.fill()):v?(this.config.lineDiff&&(y=this.config.margin/2-this.config.margin/this.config.columnsCount*this.diagrams[c].x+(this.config.margin-(this.config.arrowWidth+2*this.config.lineWidth*w))),w++,isFinite(y)||(y=0),this.context.setLineDash&&this.context.setLineDash([this.config.lineWidth,this.config.lineWidth]),this.context.beginPath(),this.context.moveTo(this.diagrams[c].left+this.config.width/2+-1*y,this.diagrams[c].top),this.context.lineTo(this.diagrams[c].left+this.config.width/2+-1*y,this.diagrams[c].top-this.config.margin+y),this.context.lineTo(u.left+this.config.width/2+-1*y,this.diagrams[c].top-this.config.margin+y),this.context.lineTo(u.left+this.config.width/2+-1*y,u.top+this.config.height+this.config.margin+y),this.context.lineTo(u.left+this.config.width/2+-1*y,u.top+this.config.height+this.config.arrowWidth/2),this.context.lineWidth=this.config.lineWidth,this.context.stroke(),this.context.beginPath(),this.context.moveTo(u.left+this.config.width/2+-1*y,u.top+this.config.height),this.context.lineTo(u.left+this.config.width/2-this.config.arrowWidth/2+-1*y,u.top+this.config.height+this.config.arrowWidth),this.context.lineTo(u.left+this.config.width/2+this.config.arrowWidth/2+-1*y,u.top+this.config.height+this.config.arrowWidth),this.context.fill()):(this.config.lineDiff&&(y=this.config.margin/2-this.config.margin/this.config.columnsCount*this.diagrams[c].x),isFinite(y)||(y=0),this.context.beginPath(),this.context.moveTo(this.diagrams[c].left+this.config.width/2+-1*y,this.diagrams[c].top),this.context.lineTo(this.diagrams[c].left+this.config.width/2+-1*y,this.diagrams[c].top-this.config.margin+y),this.context.lineTo(u.left+this.config.width/2+-1*y,u.top+this.config.height+this.config.margin+y),this.context.lineTo(u.left+this.config.width/2+-1*y,u.top+this.config.height+this.config.arrowWidth/2),this.context.lineWidth=this.config.lineWidth,this.context.stroke(),this.context.beginPath(),this.context.moveTo(u.left+this.config.width/2+-1*y,u.top+this.config.height),this.context.lineTo(u.left+this.config.width/2-this.config.arrowWidth/2+-1*y,u.top+this.config.height+this.config.arrowWidth),this.context.lineTo(u.left+this.config.width/2+this.config.arrowWidth/2+-1*y,u.top+this.config.height+this.config.arrowWidth),this.context.fill())}for(c=0;c<this.diagrams.length;c++)if(!this.diagrams[c].orphan){var T;g=this.diagrams[c].left,f=this.diagrams[c].top,this.context.fillStyle=this.diagrams[c].bgColor,this.context.strokeStyle=this.diagrams[c].bgColor,o(this.context,g,f,this.config.width,this.config.height,this.config.radius,this.config.hiddenBg),(T=this.context).fillStyle=this.diagrams[c].color,T.font=this.config.fontSize+"px "+this.config.fontFamily,e(this.context,this.diagrams[c].text,g+this.config.padding,f,this.config.width-2*this.config.padding,this.config.height,this.config.fontSize+.2*this.config.fontSize)}},this.init(t)}({diagrams:[{id:1,text:"DIAGRAM 01",color:"#999999",bgColor:"#330000"},{id:2,text:"DIAGRAM 02",color:"#999999",bgColor:"#003300"},{id:3,text:"DIAGRAM 03",color:"#999999",bgColor:"#000033"},{id:4,text:"DIAGRAM 04",color:"#999999",bgColor:"#333300"},{id:5,text:"DIAGRAM 05",color:"#999999",bgColor:"#003333"},{id:6,text:"DIAGRAM 06",color:"#999999",bgColor:"#330033"},{id:7,text:"DIAGRAM 07",color:"#999999",bgColor:"#000000"},{id:8,text:"DIAGRAM 08",color:"#999999",bgColor:"#000000"},{id:9,text:"DIAGRAM 09",color:"#999999",bgColor:"#000000"},{id:10,text:"DIAGRAM 10",color:"#999999",bgColor:"#333333"}],links:[{source:2,parent:1},{source:3,parent:1},{source:4,parent:3},{source:5,parent:3},{source:6,parent:2},{source:9,parent:9},{source:9,parent:6}],config:{element:"mycanvas",margin:30,padding:10,width:100,height:50,radius:3,hiddenBg:!1,arrowWidth:8,lineWidth:2,lineDiff:!0,fontFamily:"Arial",fontSize:12,autoSize:!0,mouseEvents:!0}})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2pzLWRpYWdyYW0tY2hhcnQvc3JjL2hlbHBlci9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvbWFpbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanMtZGlhZ3JhbS1jaGFydC9zcmMvbWFpbi5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsInJvdW5kUmVjdCIsImNvbnRleHQiLCJ4IiwieSIsIndpZHRoIiwiaGVpZ2h0IiwicmFkaXVzIiwiaGlkZGVuQmciLCJiZWdpblBhdGgiLCJtb3ZlVG8iLCJsaW5lVG8iLCJxdWFkcmF0aWNDdXJ2ZVRvIiwiY2xvc2VQYXRoIiwic3Ryb2tlIiwiZmlsbCIsIndyYXBUZXh0IiwidGV4dCIsImxpbmVIZWlnaHQiLCJ0ZXh0QWxpZ24iLCJ0ZXh0QmFzZWxpbmUiLCJjYXJzIiwic3BsaXQiLCJpaSIsImxlbmd0aCIsImxpbmUiLCJ3b3JkcyIsInRlc3RMaW5lIiwibWVhc3VyZVRleHQiLCJmaWxsVGV4dCIsImdldE9iakJ5SWQiLCJsaXN0T2JqIiwiaWRPYmoiLCJpZCIsImRhdGEiLCJ0aGlzIiwiaW5pdCIsImNhbnZhcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjb25maWciLCJlbGVtZW50IiwiZ2V0Q29udGV4dCIsImxpbmVXaWR0aCIsImF1dG9TaXplIiwicGFyZW50Tm9kZSIsImNsaWVudFdpZHRoIiwiY2xpZW50SGVpZ2h0IiwiY3R4Iiwic3ZnIiwiY3JlYXRlRWxlbWVudE5TIiwieGZvcm0iLCJjcmVhdGVTVkdNYXRyaXgiLCJnZXRUcmFuc2Zvcm0iLCJzYXZlZFRyYW5zZm9ybXMiLCJzYXZlIiwicHVzaCIsInRyYW5zbGF0ZSIsInJlc3RvcmUiLCJwb3AiLCJzY2FsZSIsInN4Iiwic3kiLCJzY2FsZU5vblVuaWZvcm0iLCJyb3RhdGUiLCJyYWRpYW5zIiwiTWF0aCIsIlBJIiwiZHgiLCJkeSIsInRyYW5zZm9ybSIsImEiLCJiIiwiZSIsImYiLCJtMiIsIm11bHRpcGx5Iiwic2V0VHJhbnNmb3JtIiwicHQiLCJjcmVhdGVTVkdQb2ludCIsInRyYW5zZm9ybWVkUG9pbnQiLCJtYXRyaXhUcmFuc2Zvcm0iLCJpbnZlcnNlIiwidHJhY2tUcmFuc2Zvcm1zIiwic2NhbGVGYWN0b3IiLCJ6b29tU2NhbGUiLCJtb3ZlWCIsIm1vdmVZIiwidXBkYXRlIiwiZHJhdyIsIm1vdXNlRXZlbnRzIiwiZXZlbnRzIiwiYWRkWm9vbSIsInNpemUiLCJmYWN0b3IiLCJwb3ciLCJyZXNldFpvb20iLCJfdGhpcyIsImxhc3RYIiwibGFzdFkiLCJkcmFnU3RhcnQiLCJhZGRFdmVudExpc3RlbmVyIiwiZXZ0IiwiYm9keSIsInN0eWxlIiwibW96VXNlclNlbGVjdCIsIndlYmtpdFVzZXJTZWxlY3QiLCJ1c2VyU2VsZWN0IiwiY3Vyc29yIiwib2Zmc2V0WCIsInBhZ2VYIiwib2Zmc2V0TGVmdCIsIm9mZnNldFkiLCJwYWdlWSIsIm9mZnNldFRvcCIsInJldHVyblZhbHVlIiwiaGFuZGxlU2Nyb2xsIiwiZGVsdGEiLCJ3aGVlbERlbHRhIiwiZGV0YWlsIiwicHJldmVudERlZmF1bHQiLCJkaWFncmFtTGlzdCIsImRpYWdyYW1MaW5lc0NvdW50IiwiZGlhZ3JhbUNvbHVtbnNDb3VudCIsImRpYWdyYW1Db2x1bW5Mb3dlciIsImRpYWdyYW1zIiwib2JqZWN0RGlhZ3JhbSIsImN4IiwiY3kiLCJjb2xvciIsImJnQ29sb3IiLCJwYXJlbnRzIiwiY2hpbGRyZW4iLCJ2aXJnaW4iLCJvcnBoYW4iLCJqIiwibGlua3MiLCJzb3VyY2UiLCJwYXJlbnQiLCJnZXRMaW5lc09iamVjdHMiLCJoaWVyYXJjaHkiLCJjb3VudE9ialRtcCIsImNvdW50IiwibGluZXNDb3VudCIsImNvbHVtbnNDb3VudCIsImNvbHVtbkxvd2VyIiwicDEiLCJwMiIsImNsZWFyUmVjdCIsImRpYWdyYW1XaXRoTWFyZ2luIiwibWFyZ2luIiwicGFyc2VJbnQiLCJtYXhXaWR0aCIsIm1hcmdpblNjcmVlbiIsImNvdW50T3JwaGFuRGVtYW5kIiwicG9zaXRpb25YIiwicG9zaXRpb25ZIiwiZmlsbFN0eWxlIiwic3Ryb2tlU3R5bGUiLCJub2RlVGV4dCIsImZvbnQiLCJmb250U2l6ZSIsImZvbnRGYW1pbHkiLCJwYWRkaW5nIiwibWFyZ2luVG9wTm90T3JwaGFucyIsImlzTmFOIiwicmF0aW8iLCJhYnMiLCJsZWZ0IiwidG9wIiwidG1wT2JqIiwiaW52ZXJ0UGFyZW50IiwiaXNEaXN0YW50IiwiYXV0b1JlZiIsImNvdW50RGlzdGFudCIsInNldExpbmVEYXNoIiwibGluZUNvbG9yIiwiZGlmZmVyZW5jZSIsImlzRmluaXRlIiwiYXJyb3dXaWR0aCIsImxpbmVEaWZmIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxLQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLElBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsWUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVB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LFlBQ3REakcsR0FBSSxFQUFHaEIsS0FBTSxhQUFjZ0gsTUFBTyxVQUFXQyxRQUFTLFlBQ3REakcsR0FBSSxFQUFHaEIsS0FBTSxhQUFjZ0gsTUFBTyxVQUFXQyxRQUFTLFlBQ3REakcsR0FBSSxFQUFHaEIsS0FBTSxhQUFjZ0gsTUFBTyxVQUFXQyxRQUFTLFlBQ3REakcsR0FBSSxFQUFHaEIsS0FBTSxhQUFjZ0gsTUFBTyxVQUFXQyxRQUFTLFlBQ3REakcsR0FBSSxFQUFHaEIsS0FBTSxhQUFjZ0gsTUFBTyxVQUFXQyxRQUFTLFlBQ3REakcsR0FBSSxFQUFHaEIsS0FBTSxhQUFjZ0gsTUFBTyxVQUFXQyxRQUFTLFlBQ3REakcsR0FBSSxFQUFHaEIsS0FBTSxhQUFjZ0gsTUFBTyxVQUFXQyxRQUFTLFlBQ3REakcsR0FBSSxHQUFJaEIsS0FBTSxhQUFjZ0gsTUFBTyxVQUFXQyxRQUFTLFlBRXhETSxRQUNFQyxPQUFRLEVBQUdDLE9BQU8sSUFDbEJELE9BQVEsRUFBR0MsT0FBTyxJQUNsQkQsT0FBUSxFQUFHQyxPQUFPLElBQ2xCRCxPQUFRLEVBQUdDLE9BQU8sSUFDbEJELE9BQVEsRUFBR0MsT0FBTyxJQUNsQkQsT0FBUSxFQUFHQyxPQUFPLElBQ2xCRCxPQUFRLEVBQUdDLE9BQU8sSUFFcEJsRyxRQUNDQyxRQUFTLFdBQ1Q2RyxPQUFRLEdBQ1JhLFFBQVMsR0FDVDlKLE1BQU8sSUFDUEMsT0FBUSxHQUNSQyxPQUFRLEVBQ1JDLFVBQVUsRUFDVjJLLFdBQVksRUFDWnhJLFVBQVcsRUFDWHlJLFVBQVUsRUFHVmxCLFdBQVksUUFDWkQsU0FBVSxHQUNWckgsVUFBVyxFQUNYOEMsYUFBWSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG4iLCJleHBvcnQgZnVuY3Rpb24gZ2V0UmFuZG9tSW50KG1pbiwgbWF4KSB7XG4gIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSkgKyBtaW47XG59XG5cbmV4cG9ydCBmdW5jdGlvbiByb3VuZFJlY3QoY29udGV4dCwgeCwgeSwgd2lkdGgsIGhlaWdodCwgcmFkaXVzLCBoaWRkZW5CZykge1xuICBjb250ZXh0LmJlZ2luUGF0aCgpO1xuICBjb250ZXh0Lm1vdmVUbyh4ICsgcmFkaXVzLCB5KTtcbiAgY29udGV4dC5saW5lVG8oeCArIHdpZHRoIC0gcmFkaXVzLCB5KTtcbiAgY29udGV4dC5xdWFkcmF0aWNDdXJ2ZVRvKHggKyB3aWR0aCwgeSwgeCArIHdpZHRoLCB5ICsgcmFkaXVzKTtcbiAgY29udGV4dC5saW5lVG8oeCArIHdpZHRoLCB5ICsgaGVpZ2h0IC0gcmFkaXVzKTtcbiAgY29udGV4dC5xdWFkcmF0aWNDdXJ2ZVRvKFxuICAgIHggKyB3aWR0aCxcbiAgICB5ICsgaGVpZ2h0LFxuICAgIHggKyB3aWR0aCAtIHJhZGl1cyxcbiAgICB5ICsgaGVpZ2h0XG4gICk7XG4gIGNvbnRleHQubGluZVRvKHggKyByYWRpdXMsIHkgKyBoZWlnaHQpO1xuICBjb250ZXh0LnF1YWRyYXRpY0N1cnZlVG8oeCwgeSArIGhlaWdodCwgeCwgeSArIGhlaWdodCAtIHJhZGl1cyk7XG4gIGNvbnRleHQubGluZVRvKHgsIHkgKyByYWRpdXMpO1xuICBjb250ZXh0LnF1YWRyYXRpY0N1cnZlVG8oeCwgeSwgeCArIHJhZGl1cywgeSk7XG4gIGNvbnRleHQuY2xvc2VQYXRoKCk7XG4gIGNvbnRleHQuc3Ryb2tlKCk7XG4gIGlmICghaGlkZGVuQmcpIHtcbiAgICBjb250ZXh0LmZpbGwoKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JhcFRleHQoY29udGV4dCwgdGV4dCwgeCwgeSwgd2lkdGgsIGhlaWdodCwgbGluZUhlaWdodCkge1xuICBjb250ZXh0LnRleHRBbGlnbiA9IFwiY2VudGVyXCI7XG4gIGNvbnRleHQudGV4dEJhc2VsaW5lID0gXCJtaWRkbGVcIjtcbiAgeCA9IHggKyB3aWR0aCAvIDI7XG4gIHkgPSB5ICsgaGVpZ2h0IC8gMjtcblxuICB2YXIgY2FycyA9IHRleHQuc3BsaXQoXCJcXG5cIik7XG5cbiAgZm9yICh2YXIgaWkgPSAwOyBpaSA8IGNhcnMubGVuZ3RoOyBpaSsrKSB7XG4gICAgdmFyIGxpbmUgPSBcIlwiO1xuICAgIHZhciB3b3JkcyA9IGNhcnNbaWldLnNwbGl0KFwiIFwiKTtcblxuICAgIGZvciAodmFyIG4gPSAwOyBuIDwgd29yZHMubGVuZ3RoOyBuKyspIHtcbiAgICAgIHZhciB0ZXN0TGluZSA9IGxpbmUgKyB3b3Jkc1tuXSArIFwiIFwiO1xuICAgICAgdmFyIG1ldHJpY3MgPSBjb250ZXh0Lm1lYXN1cmVUZXh0KHRlc3RMaW5lKTtcbiAgICAgIHZhciB0ZXN0V2lkdGggPSBtZXRyaWNzLndpZHRoO1xuXG4gICAgICBpZiAodGVzdFdpZHRoID4gd2lkdGgpIHtcbiAgICAgICAgbGluZSA9IHdvcmRzW25dICsgXCIgXCI7XG4gICAgICAgIHkgLT0gbGluZUhlaWdodCAvIDI7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsaW5lID0gdGVzdExpbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbGluZSA9IFwiXCI7XG5cbiAgICBmb3IgKHZhciBuID0gMDsgbiA8IHdvcmRzLmxlbmd0aDsgbisrKSB7XG4gICAgICB2YXIgdGVzdExpbmUgPSBsaW5lICsgd29yZHNbbl0gKyBcIiBcIjtcbiAgICAgIHZhciBtZXRyaWNzID0gY29udGV4dC5tZWFzdXJlVGV4dCh0ZXN0TGluZSk7XG4gICAgICB2YXIgdGVzdFdpZHRoID0gbWV0cmljcy53aWR0aDtcblxuICAgICAgaWYgKHRlc3RXaWR0aCA+IHdpZHRoKSB7XG4gICAgICAgIGNvbnRleHQuZmlsbFRleHQobGluZSwgeCwgeSk7XG4gICAgICAgIGxpbmUgPSB3b3Jkc1tuXSArIFwiIFwiO1xuICAgICAgICB5ICs9IGxpbmVIZWlnaHQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBsaW5lID0gdGVzdExpbmU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29udGV4dC5maWxsVGV4dChsaW5lLCB4LCB5KTtcbiAgICB5ICs9IGxpbmVIZWlnaHQ7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbG9yTHVtaW5hbmNlKGhleCwgbHVtKSB7XG4gIGhleCA9IFN0cmluZyhoZXgpLnJlcGxhY2UoL1teMC05YS1mXS9naSwgXCJcIik7XG4gIGlmIChoZXgubGVuZ3RoIDwgNikge1xuICAgIGhleCA9IGhleFswXSArIGhleFswXSArIGhleFsxXSArIGhleFsxXSArIGhleFsyXSArIGhleFsyXTtcbiAgfVxuICBsdW0gPSBsdW0gfHwgMDtcbiAgdmFyIHJnYiA9IFwiI1wiLFxuICAgIGMsXG4gICAgaTtcbiAgZm9yIChpID0gMDsgaSA8IDM7IGkrKykge1xuICAgIGMgPSBwYXJzZUludChoZXguc3Vic3RyKGkgKiAyLCAyKSwgMTYpO1xuICAgIGMgPSBNYXRoLnJvdW5kKE1hdGgubWluKE1hdGgubWF4KDAsIGMgKyBjICogbHVtKSwgMjU1KSkudG9TdHJpbmcoMTYpO1xuICAgIHJnYiArPSAoXCIwMFwiICsgYykuc3Vic3RyKGMubGVuZ3RoKTtcbiAgfVxuICByZXR1cm4gcmdiO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY2xvbmVPYmoob2JqKSB7XG4gIGlmIChvYmogPT0gbnVsbCB8fCB0eXBlb2Ygb2JqICE9IFwib2JqZWN0XCIpIHJldHVybiBvYmo7XG5cbiAgdmFyIHRlbXAgPSBvYmouY29uc3RydWN0b3IoKTtcblxuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XG4gICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XG4gICAgICB0ZW1wW2tleV0gPSBjbG9uZU9iaihvYmpba2V5XSk7XG4gICAgfVxuICB9XG4gIHJldHVybiB0ZW1wO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHJhY2tUcmFuc2Zvcm1zKGN0eCkge1xuICB2YXIgc3ZnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJzdmdcIik7XG4gIHZhciB4Zm9ybSA9IHN2Zy5jcmVhdGVTVkdNYXRyaXgoKTtcbiAgY3R4LmdldFRyYW5zZm9ybSA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiB4Zm9ybTtcbiAgfTtcblxuICB2YXIgc2F2ZWRUcmFuc2Zvcm1zID0gW107XG4gIHZhciBzYXZlID0gY3R4LnNhdmU7XG4gIGN0eC5zYXZlID0gZnVuY3Rpb24oKSB7XG4gICAgc2F2ZWRUcmFuc2Zvcm1zLnB1c2goeGZvcm0udHJhbnNsYXRlKDAsIDApKTtcbiAgICByZXR1cm4gc2F2ZS5jYWxsKGN0eCk7XG4gIH07XG4gIHZhciByZXN0b3JlID0gY3R4LnJlc3RvcmU7XG4gIGN0eC5yZXN0b3JlID0gZnVuY3Rpb24oKSB7XG4gICAgeGZvcm0gPSBzYXZlZFRyYW5zZm9ybXMucG9wKCk7XG4gICAgcmV0dXJuIHJlc3RvcmUuY2FsbChjdHgpO1xuICB9O1xuXG4gIHZhciBzY2FsZSA9IGN0eC5zY2FsZTtcbiAgY3R4LnNjYWxlID0gZnVuY3Rpb24oc3gsIHN5KSB7XG4gICAgeGZvcm0gPSB4Zm9ybS5zY2FsZU5vblVuaWZvcm0oc3gsIHN5KTtcbiAgICByZXR1cm4gc2NhbGUuY2FsbChjdHgsIHN4LCBzeSk7XG4gIH07XG4gIHZhciByb3RhdGUgPSBjdHgucm90YXRlO1xuICBjdHgucm90YXRlID0gZnVuY3Rpb24ocmFkaWFucykge1xuICAgIHhmb3JtID0geGZvcm0ucm90YXRlKChyYWRpYW5zICogMTgwKSAvIE1hdGguUEkpO1xuICAgIHJldHVybiByb3RhdGUuY2FsbChjdHgsIHJhZGlhbnMpO1xuICB9O1xuICB2YXIgdHJhbnNsYXRlID0gY3R4LnRyYW5zbGF0ZTtcbiAgY3R4LnRyYW5zbGF0ZSA9IGZ1bmN0aW9uKGR4LCBkeSkge1xuICAgIHhmb3JtID0geGZvcm0udHJhbnNsYXRlKGR4LCBkeSk7XG4gICAgcmV0dXJuIHRyYW5zbGF0ZS5jYWxsKGN0eCwgZHgsIGR5KTtcbiAgfTtcbiAgdmFyIHRyYW5zZm9ybSA9IGN0eC50cmFuc2Zvcm07XG4gIGN0eC50cmFuc2Zvcm0gPSBmdW5jdGlvbihhLCBiLCBjLCBkLCBlLCBmKSB7XG4gICAgdmFyIG0yID0gc3ZnLmNyZWF0ZVNWR01hdHJpeCgpO1xuICAgIG0yLmEgPSBhO1xuICAgIG0yLmIgPSBiO1xuICAgIG0yLmMgPSBjO1xuICAgIG0yLmQgPSBkO1xuICAgIG0yLmUgPSBlO1xuICAgIG0yLmYgPSBmO1xuICAgIHhmb3JtID0geGZvcm0ubXVsdGlwbHkobTIpO1xuICAgIHJldHVybiB0cmFuc2Zvcm0uY2FsbChjdHgsIGEsIGIsIGMsIGQsIGUsIGYpO1xuICB9O1xuICB2YXIgc2V0VHJhbnNmb3JtID0gY3R4LnNldFRyYW5zZm9ybTtcbiAgY3R4LnNldFRyYW5zZm9ybSA9IGZ1bmN0aW9uKGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgICB4Zm9ybS5hID0gYTtcbiAgICB4Zm9ybS5iID0gYjtcbiAgICB4Zm9ybS5jID0gYztcbiAgICB4Zm9ybS5kID0gZDtcbiAgICB4Zm9ybS5lID0gZTtcbiAgICB4Zm9ybS5mID0gZjtcbiAgICByZXR1cm4gc2V0VHJhbnNmb3JtLmNhbGwoY3R4LCBhLCBiLCBjLCBkLCBlLCBmKTtcbiAgfTtcbiAgdmFyIHB0ID0gc3ZnLmNyZWF0ZVNWR1BvaW50KCk7XG4gIGN0eC50cmFuc2Zvcm1lZFBvaW50ID0gZnVuY3Rpb24oeCwgeSkge1xuICAgIHB0LnggPSB4O1xuICAgIHB0LnkgPSB5O1xuICAgIHJldHVybiBwdC5tYXRyaXhUcmFuc2Zvcm0oeGZvcm0uaW52ZXJzZSgpKTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldE9iakJ5SWQobGlzdE9iaiwgaWRPYmopIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0T2JqLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGxpc3RPYmpbaV0uaWQgPT0gaWRPYmopIHtcbiAgICAgIHJldHVybiBsaXN0T2JqW2ldO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbnVsbDtcbn1cbiIsImltcG9ydCBKc0RpYWdyYW1DaGFydCBmcm9tICdqcy1kaWFncmFtLWNoYXJ0JztcblxuLy8gbGV0IEpzRGlhZ3JhbUNoYXJ0ID0gcmVxdWlyZSgnanMtZGlhZ3JhbS1jaGFydCcpLmRlZmF1bHQ7XG5cbmxldCBkYXRhRXhhbXBsZSA9IHtcblx0ZGlhZ3JhbXM6IFtcblx0e2lkOiAxLCB0ZXh0OiBcIkRJQUdSQU0gMDFcIiwgY29sb3I6IFwiIzk5OTk5OVwiLCBiZ0NvbG9yOiBcIiMzMzAwMDBcIn0sXG5cdHtpZDogMiwgdGV4dDogXCJESUFHUkFNIDAyXCIsIGNvbG9yOiBcIiM5OTk5OTlcIiwgYmdDb2xvcjogXCIjMDAzMzAwXCJ9LFxuXHR7aWQ6IDMsIHRleHQ6IFwiRElBR1JBTSAwM1wiLCBjb2xvcjogXCIjOTk5OTk5XCIsIGJnQ29sb3I6IFwiIzAwMDAzM1wifSxcblx0e2lkOiA0LCB0ZXh0OiBcIkRJQUdSQU0gMDRcIiwgY29sb3I6IFwiIzk5OTk5OVwiLCBiZ0NvbG9yOiBcIiMzMzMzMDBcIn0sXG5cdHtpZDogNSwgdGV4dDogXCJESUFHUkFNIDA1XCIsIGNvbG9yOiBcIiM5OTk5OTlcIiwgYmdDb2xvcjogXCIjMDAzMzMzXCJ9LFxuXHR7aWQ6IDYsIHRleHQ6IFwiRElBR1JBTSAwNlwiLCBjb2xvcjogXCIjOTk5OTk5XCIsIGJnQ29sb3I6IFwiIzMzMDAzM1wifSxcblx0e2lkOiA3LCB0ZXh0OiBcIkRJQUdSQU0gMDdcIiwgY29sb3I6IFwiIzk5OTk5OVwiLCBiZ0NvbG9yOiBcIiMwMDAwMDBcIn0sXG5cdHtpZDogOCwgdGV4dDogXCJESUFHUkFNIDA4XCIsIGNvbG9yOiBcIiM5OTk5OTlcIiwgYmdDb2xvcjogXCIjMDAwMDAwXCJ9LFxuXHR7aWQ6IDksIHRleHQ6IFwiRElBR1JBTSAwOVwiLCBjb2xvcjogXCIjOTk5OTk5XCIsIGJnQ29sb3I6IFwiIzAwMDAwMFwifSxcblx0e2lkOiAxMCwgdGV4dDogXCJESUFHUkFNIDEwXCIsIGNvbG9yOiBcIiM5OTk5OTlcIiwgYmdDb2xvcjogXCIjMzMzMzMzXCJ9XG5cdF0sXG5cdGxpbmtzOiBbXG5cdHsgc291cmNlOiAyLCBwYXJlbnQ6MSAgfSxcblx0eyBzb3VyY2U6IDMsIHBhcmVudDoxICB9LFxuXHR7IHNvdXJjZTogNCwgcGFyZW50OjMgIH0sXG5cdHsgc291cmNlOiA1LCBwYXJlbnQ6MyAgfSxcblx0eyBzb3VyY2U6IDYsIHBhcmVudDoyICB9LFxuXHR7IHNvdXJjZTogOSwgcGFyZW50OjkgIH0sXG5cdHsgc291cmNlOiA5LCBwYXJlbnQ6NiAgfVxuXHRdLFxuXHRjb25maWc6e1xuXHRcdGVsZW1lbnQ6IFwibXljYW52YXNcIixcblx0XHRtYXJnaW46IDMwLFxuXHRcdHBhZGRpbmc6IDEwLFxuXHRcdHdpZHRoOiAxMDAsXG5cdFx0aGVpZ2h0OiA1MCxcblx0XHRyYWRpdXM6IDMsXG5cdFx0aGlkZGVuQmc6IGZhbHNlLFxuXHRcdGFycm93V2lkdGg6IDgsXG5cdFx0bGluZVdpZHRoOiAyLFxuXHRcdGxpbmVEaWZmOiB0cnVlLFxuXHRcdC8vbGluZUNvbG9yOiBcIiMwMDAwMDBcIiwgLy8gT1BUSU9OQUxcblx0XHQvL2hpZGRlbkJnOiB0cnVlLCAvLyBPUFRJT05BTFxuXHRcdGZvbnRGYW1pbHk6IFwiQXJpYWxcIixcblx0XHRmb250U2l6ZTogMTIsXG5cdFx0YXV0b1NpemUgOiB0cnVlLFxuXHRcdG1vdXNlRXZlbnRzOnRydWVcblx0fVxufTtcblxubGV0IGNoYXJ0ID0gbmV3IEpzRGlhZ3JhbUNoYXJ0KGRhdGFFeGFtcGxlKTtcblxuLy9PVEhFUlMgTUVUSE9EUyBcblxuLy9jaGFydC5hZGRab29tKC01KTtcbi8vY2hhcnQucmVzZXRab29tKCk7XG4vL2NoYXJ0LnVwZGF0ZShkYXRhRXhhbXBsZSk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCB7IGdldE9iakJ5SWQsIHJvdW5kUmVjdCwgdHJhY2tUcmFuc2Zvcm1zLCB3cmFwVGV4dCB9IGZyb20gXCIuL2hlbHBlclwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBKc0RpYWdyYW1DaGFydChkYXRhKSB7XG5cdHRoaXMuaW5pdCA9IGZ1bmN0aW9uKGRhdGEpIHtcblx0ICB2YXIgX3RoaXMgPSB0aGlzO1xuXHQgIF90aGlzLmNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGRhdGEuY29uZmlnLmVsZW1lbnQpO1xuICBcblx0ICBpZiAoX3RoaXMuY2FudmFzKSB7XG5cdFx0X3RoaXMuY29udGV4dCA9IF90aGlzLmNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG5cdCAgfSBlbHNlIHtcblx0XHR0aHJvdyBcIkVsZW1lbnQgbm90IGZvdW5kXCI7XG5cdCAgfVxuICBcblx0ICBfdGhpcy5jb250ZXh0ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dChcIjJkXCIpO1xuXHQgIF90aGlzLmNvbnRleHQubGluZVdpZHRoID0gZGF0YS5jb25maWcubGluZVdpZHRoO1xuICBcblx0ICBpZiAoZGF0YS5jb25maWcuYXV0b1NpemUpIHtcblx0XHR0aGlzLmNhbnZhcy53aWR0aCA9IHRoaXMuY2FudmFzLnBhcmVudE5vZGUuY2xpZW50V2lkdGg7XG5cdFx0dGhpcy5jYW52YXMuaGVpZ2h0ID0gdGhpcy5jYW52YXMucGFyZW50Tm9kZS5jbGllbnRIZWlnaHQ7XG5cdCAgfVxuICBcblx0ICB0cmFja1RyYW5zZm9ybXModGhpcy5jb250ZXh0KTtcbiAgXG5cdCAgZGF0YS5jb25maWcuc2NhbGVGYWN0b3IgPSAxLjE7XG5cdCAgZGF0YS5jb25maWcuem9vbVNjYWxlID0gMDtcblx0ICBkYXRhLmNvbmZpZy5tb3ZlWCA9IDA7XG5cdCAgZGF0YS5jb25maWcubW92ZVkgPSAwO1xuICBcblx0ICAvL3RoaXMuZGF0YSA9IGRhdGE7XG5cdCAgdGhpcy5jb25maWcgPSBkYXRhLmNvbmZpZztcblx0ICB0aGlzLnVwZGF0ZShkYXRhKTtcblx0ICB0aGlzLmRyYXcoKTtcbiAgXG5cdCAgaWYgKF90aGlzLmNvbmZpZy5tb3VzZUV2ZW50cykge1xuXHRcdHRoaXMuZXZlbnRzKCk7XG5cdCAgfVxuXHR9O1xuICBcblx0dGhpcy5hZGRab29tID0gZnVuY3Rpb24oc2l6ZSkge1xuXHQgIHZhciBfdGhpcyA9IHRoaXM7XG5cdCAgX3RoaXMuY29uZmlnLnpvb21TY2FsZSArPSBzaXplO1xuXHQgIHZhciBwdCA9IF90aGlzLmNvbnRleHQudHJhbnNmb3JtZWRQb2ludChcblx0XHRfdGhpcy5jYW52YXMud2lkdGggLyAyLFxuXHRcdF90aGlzLmNhbnZhcy5oZWlnaHQgLyAyXG5cdCAgKTtcblx0ICB0aGlzLmNvbnRleHQudHJhbnNsYXRlKHB0LngsIHB0LnkpO1xuXHQgIHZhciBmYWN0b3IgPSBNYXRoLnBvdyhfdGhpcy5jb25maWcuc2NhbGVGYWN0b3IsIHNpemUpO1xuXHQgIF90aGlzLmNvbnRleHQuc2NhbGUoZmFjdG9yLCBmYWN0b3IpO1xuXHQgIF90aGlzLmNvbnRleHQudHJhbnNsYXRlKC1wdC54LCAtcHQueSk7XG5cdCAgdGhpcy5kcmF3KCk7XG5cdH07XG4gIFxuXHR0aGlzLnJlc2V0Wm9vbSA9IGZ1bmN0aW9uKCkge1xuXHQgIHZhciBfdGhpcyA9IHRoaXM7XG5cdCAgX3RoaXMuYWRkWm9vbSgtX3RoaXMuY29uZmlnLnpvb21TY2FsZSk7XG5cdCAgX3RoaXMuY29udGV4dC50cmFuc2xhdGUoLV90aGlzLmNvbmZpZy5tb3ZlWCwgLV90aGlzLmNvbmZpZy5tb3ZlWSk7XG5cdCAgX3RoaXMuY29uZmlnLnpvb21TY2FsZSA9IDA7XG5cdCAgX3RoaXMuY29uZmlnLm1vdmVYID0gMDtcblx0ICBfdGhpcy5jb25maWcubW92ZVkgPSAwO1xuXHR9O1xuICBcblx0dGhpcy5ldmVudHMgPSBmdW5jdGlvbigpIHtcblx0ICB2YXIgX3RoaXMgPSB0aGlzO1xuICBcblx0ICB2YXIgbGFzdFggPSBfdGhpcy5jYW52YXMud2lkdGggLyAyO1xuXHQgIHZhciBsYXN0WSA9IF90aGlzLmNhbnZhcy5oZWlnaHQgLyAyO1xuXHQgIHZhciBkcmFnU3RhcnQgPSBmYWxzZTtcblx0ICB2YXIgZHJhZ2dlZCA9IGZhbHNlO1xuICBcblx0ICBfdGhpcy5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcihcblx0XHRcIm1vdXNlZG93blwiLFxuXHRcdGZ1bmN0aW9uKGV2dCkge1xuXHRcdCAgZG9jdW1lbnQuYm9keS5zdHlsZS5tb3pVc2VyU2VsZWN0ID0gZG9jdW1lbnQuYm9keS5zdHlsZS53ZWJraXRVc2VyU2VsZWN0ID0gZG9jdW1lbnQuYm9keS5zdHlsZS51c2VyU2VsZWN0ID1cblx0XHRcdFwibm9uZVwiO1xuXHRcdCAgX3RoaXMuY2FudmFzLnN0eWxlLmN1cnNvciA9IFwibW92ZVwiO1xuXHRcdCAgbGFzdFggPSBldnQub2Zmc2V0WCB8fCBldnQucGFnZVggLSBfdGhpcy5jYW52YXMub2Zmc2V0TGVmdDtcblx0XHQgIGxhc3RZID0gZXZ0Lm9mZnNldFkgfHwgZXZ0LnBhZ2VZIC0gX3RoaXMuY2FudmFzLm9mZnNldFRvcDtcblx0XHQgIGRyYWdTdGFydCA9IF90aGlzLmNvbnRleHQudHJhbnNmb3JtZWRQb2ludChsYXN0WCwgbGFzdFkpO1xuXHRcdCAgZHJhZ2dlZCA9IGZhbHNlO1xuXHRcdCAgZXZ0LnJldHVyblZhbHVlID0gZmFsc2U7XG5cdFx0fSxcblx0XHRmYWxzZVxuXHQgICk7XG4gIFxuXHQgIF90aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFxuXHRcdFwibW91c2Vtb3ZlXCIsXG5cdFx0ZnVuY3Rpb24oZXZ0KSB7XG5cdFx0ICBsYXN0WCA9IGV2dC5vZmZzZXRYIHx8IGV2dC5wYWdlWCAtIF90aGlzLmNhbnZhcy5vZmZzZXRMZWZ0O1xuXHRcdCAgbGFzdFkgPSBldnQub2Zmc2V0WSB8fCBldnQucGFnZVkgLSBfdGhpcy5jYW52YXMub2Zmc2V0VG9wO1xuICBcblx0XHQgIGRyYWdnZWQgPSB0cnVlO1xuXHRcdCAgaWYgKGRyYWdTdGFydCkge1xuXHRcdFx0dmFyIHB0ID0gX3RoaXMuY29udGV4dC50cmFuc2Zvcm1lZFBvaW50KGxhc3RYLCBsYXN0WSk7XG5cdFx0XHRfdGhpcy5jb250ZXh0LnRyYW5zbGF0ZShwdC54IC0gZHJhZ1N0YXJ0LngsIHB0LnkgLSBkcmFnU3RhcnQueSk7XG5cdFx0XHRfdGhpcy5kcmF3KCk7XG5cdFx0XHRfdGhpcy5jb25maWcubW92ZVggKz0gcHQueCAtIGRyYWdTdGFydC54O1xuXHRcdFx0X3RoaXMuY29uZmlnLm1vdmVZICs9IHB0LnkgLSBkcmFnU3RhcnQueTtcblx0XHQgIH1cblx0XHR9LFxuXHRcdGZhbHNlXG5cdCAgKTtcbiAgXG5cdCAgX3RoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXG5cdFx0XCJtb3VzZXVwXCIsXG5cdFx0ZnVuY3Rpb24oZXZ0KSB7XG5cdFx0ICBkcmFnU3RhcnQgPSBudWxsO1xuXHRcdCAgX3RoaXMuY2FudmFzLnN0eWxlLmN1cnNvciA9IFwiZGVmYXVsdFwiO1xuXHRcdCAgLy9pZiAoIWRyYWdnZWQpIHpvb20oZXZ0LnNoaWZ0S2V5ID8gLTEgOiAxICk7XG5cdFx0fSxcblx0XHRmYWxzZVxuXHQgICk7XG4gIFxuXHQgIHZhciBoYW5kbGVTY3JvbGwgPSBmdW5jdGlvbihldnQpIHtcblx0XHR2YXIgZGVsdGEgPSBldnQud2hlZWxEZWx0YVxuXHRcdCAgPyBldnQud2hlZWxEZWx0YSAvIDMwMFxuXHRcdCAgOiBldnQuZGV0YWlsXG5cdFx0ICA/IC1ldnQuZGV0YWlsXG5cdFx0ICA6IDA7XG5cdFx0X3RoaXMuYWRkWm9vbShkZWx0YSk7XG5cdFx0cmV0dXJuIGV2dC5wcmV2ZW50RGVmYXVsdCgpICYmIGZhbHNlO1xuXHQgIH07XG4gIFxuXHQgIF90aGlzLmNhbnZhcy5hZGRFdmVudExpc3RlbmVyKFwiRE9NTW91c2VTY3JvbGxcIiwgaGFuZGxlU2Nyb2xsLCBmYWxzZSk7XG5cdCAgX3RoaXMuY2FudmFzLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZXdoZWVsXCIsIGhhbmRsZVNjcm9sbCwgZmFsc2UpO1xuXHR9O1xuICBcblx0dGhpcy51cGRhdGUgPSBmdW5jdGlvbihkYXRhKSB7XG5cdCAgLy8gaWYoZGF0YSl7XG5cdCAgLy8gICBkYXRhID0gdGhpcy5kYXRhO1xuXHQgIC8vIH1cbiAgXG5cdCAgdmFyIF90aGlzID0gdGhpcztcblx0ICAvL190aGlzLmRhdGEgPSBkYXRhO1xuICBcblx0ICB2YXIgZGlhZ3JhbUxpc3QgPSBbXTtcblx0ICB2YXIgZGlhZ3JhbUxpbmVzQ291bnQgPSBbXTtcblx0ICB2YXIgZGlhZ3JhbUNvbHVtbnNDb3VudCA9IDA7XG5cdCAgdmFyIGRpYWdyYW1Db2x1bW5Mb3dlciA9IDA7XG4gIFxuXHQgIGZvciAodmFyIGkgPSAwOyBpIDwgZGF0YS5kaWFncmFtcy5sZW5ndGg7IGkrKykge1xuXHRcdHZhciBvYmplY3REaWFncmFtID0ge1xuXHRcdCAgaWQ6IGRhdGEuZGlhZ3JhbXNbaV0uaWQsXG5cdFx0ICB4OiAwLFxuXHRcdCAgeTogMCxcblx0XHQgIGN4OiAwLFxuXHRcdCAgY3k6IDAsXG5cdFx0ICB0ZXh0OiBkYXRhLmRpYWdyYW1zW2ldLnRleHQsXG5cdFx0ICBjb2xvcjogZGF0YS5kaWFncmFtc1tpXS5jb2xvcixcblx0XHQgIGJnQ29sb3I6IGRhdGEuZGlhZ3JhbXNbaV0uYmdDb2xvcixcblx0XHQgIHBhcmVudHM6IFtdLFxuXHRcdCAgY2hpbGRyZW46IFtdLFxuXHRcdCAgdmlyZ2luOiB0cnVlLFxuXHRcdCAgb3JwaGFuOiB0cnVlXG5cdFx0fTtcbiAgXG5cdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkYXRhLmxpbmtzLmxlbmd0aDsgaisrKSB7XG5cdFx0ICBpZiAoZGF0YS5saW5rc1tqXS5zb3VyY2UgPT0gb2JqZWN0RGlhZ3JhbS5pZCkge1xuXHRcdFx0b2JqZWN0RGlhZ3JhbS5wYXJlbnRzLnB1c2goZGF0YS5saW5rc1tqXS5wYXJlbnQpO1xuXHRcdFx0b2JqZWN0RGlhZ3JhbS5vcnBoYW4gPSBmYWxzZTtcblx0XHQgIH1cbiAgXG5cdFx0ICBpZiAoZGF0YS5saW5rc1tqXS5wYXJlbnQgPT0gb2JqZWN0RGlhZ3JhbS5pZCkge1xuXHRcdFx0b2JqZWN0RGlhZ3JhbS5jaGlsZHJlbi5wdXNoKGRhdGEubGlua3Nbal0uc291cmNlKTtcblx0XHRcdG9iamVjdERpYWdyYW0ub3JwaGFuID0gZmFsc2U7XG5cdFx0ICB9XG5cdFx0fVxuICBcblx0XHRkaWFncmFtTGlzdC5wdXNoKG9iamVjdERpYWdyYW0pO1xuXHQgIH1cbiAgXG5cdCAgdmFyIGdldExpbmVzT2JqZWN0cyA9IGZ1bmN0aW9uIGdldExpbmVzT2JqZWN0cyhvYmplY3QsIGhpZXJhcmNoeSkge1xuXHRcdGlmIChvYmplY3QudmlyZ2luKSB7XG5cdFx0ICBvYmplY3QudmlyZ2luID0gZmFsc2U7XG5cdFx0ICBvYmplY3QueSA9IGhpZXJhcmNoeTtcbiAgXG5cdFx0ICBpZiAoaGllcmFyY2h5IDwgZGlhZ3JhbUNvbHVtbkxvd2VyKSB7XG5cdFx0XHRkaWFncmFtQ29sdW1uTG93ZXIgPSBoaWVyYXJjaHk7XG5cdFx0ICB9XG4gIFxuXHRcdCAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmplY3QuY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciB0bXBPYmogPSBnZXRPYmpCeUlkKGRpYWdyYW1MaXN0LCBvYmplY3QuY2hpbGRyZW5baV0pO1xuXHRcdFx0Z2V0TGluZXNPYmplY3RzKHRtcE9iaiwgaGllcmFyY2h5ICsgMSk7XG5cdFx0ICB9XG4gIFxuXHRcdCAgZm9yICh2YXIgaSA9IDA7IGkgPCBvYmplY3QucGFyZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIHRtcE9iaiA9IGdldE9iakJ5SWQoZGlhZ3JhbUxpc3QsIG9iamVjdC5wYXJlbnRzW2ldKTtcblx0XHRcdGdldExpbmVzT2JqZWN0cyh0bXBPYmosIGhpZXJhcmNoeSAtIDEpO1xuXHRcdCAgfVxuXHRcdH1cblx0ICB9O1xuICBcblx0ICBmb3IgKHZhciBpID0gMDsgaSA8IGRpYWdyYW1MaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0Z2V0TGluZXNPYmplY3RzKGRpYWdyYW1MaXN0W2ldLCAwKTtcblx0ICB9XG4gIFxuXHQgIGZvciAodmFyIGkgPSAwOyBpIDwgZGlhZ3JhbUxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgY291bnRPYmpUbXAgPSBnZXRPYmpCeUlkKFxuXHRcdCAgZGlhZ3JhbUxpbmVzQ291bnQsXG5cdFx0ICBkaWFncmFtTGlzdFtpXS55XG5cdFx0KTtcblx0XHRpZiAoY291bnRPYmpUbXAgIT0gbnVsbCkge1xuXHRcdCAgaWYgKCFkaWFncmFtTGlzdFtpXS5vcnBoYW4pIHtcblx0XHRcdGNvdW50T2JqVG1wLmNvdW50Kys7XG5cdFx0XHRkaWFncmFtTGlzdFtpXS54ID0gY291bnRPYmpUbXAuY291bnQ7XG5cdFx0XHRpZiAoY291bnRPYmpUbXAuY291bnQgPiBkaWFncmFtQ29sdW1uc0NvdW50KSB7XG5cdFx0XHQgIGRpYWdyYW1Db2x1bW5zQ291bnQgPSBjb3VudE9ialRtcC5jb3VudDtcblx0XHRcdH1cblx0XHQgIH1cblx0XHR9IGVsc2Uge1xuXHRcdCAgaWYgKCFkaWFncmFtTGlzdFtpXS5vcnBoYW4pIHtcblx0XHRcdGRpYWdyYW1MaW5lc0NvdW50LnB1c2goeyBpZDogZGlhZ3JhbUxpc3RbaV0ueSwgY291bnQ6IDEgfSk7XG5cdFx0XHRkaWFncmFtTGlzdFtpXS54ID0gMTtcblx0XHQgIH1cblx0XHR9XG5cdCAgfVxuICBcblx0ICB0aGlzLmNvbmZpZy5saW5lc0NvdW50ID0gZGlhZ3JhbUxpbmVzQ291bnQ7XG5cdCAgdGhpcy5jb25maWcuY29sdW1uc0NvdW50ID0gZGlhZ3JhbUNvbHVtbnNDb3VudDtcblx0ICB0aGlzLmNvbmZpZy5jb2x1bW5Mb3dlciA9IGRpYWdyYW1Db2x1bW5Mb3dlcjtcblx0ICB0aGlzLmRpYWdyYW1zID0gZGlhZ3JhbUxpc3Q7XG5cdH07XG4gIFxuXHR0aGlzLmRyYXcgPSBmdW5jdGlvbigpIHtcblx0ICB2YXIgX3RoaXMgPSB0aGlzO1xuICBcblx0ICBpZiAoX3RoaXMuY29udGV4dC50cmFuc2Zvcm1lZFBvaW50KSB7XG5cdFx0dmFyIHAxID0gX3RoaXMuY29udGV4dC50cmFuc2Zvcm1lZFBvaW50KDAsIDApO1xuXHRcdHZhciBwMiA9IF90aGlzLmNvbnRleHQudHJhbnNmb3JtZWRQb2ludChcblx0XHQgIF90aGlzLmNhbnZhcy53aWR0aCxcblx0XHQgIF90aGlzLmNhbnZhcy5oZWlnaHRcblx0XHQpO1xuXHRcdF90aGlzLmNvbnRleHQuY2xlYXJSZWN0KHAxLngsIHAxLnksIHAyLnggLSBwMS54LCBwMi55IC0gcDEueSk7XG5cdCAgfSBlbHNlIHtcblx0XHRfdGhpcy5jb250ZXh0LmNsZWFyUmVjdCgwLCAwLCBfdGhpcy5jYW52YXMud2lkdGgsIF90aGlzLmNhbnZhcy5oZWlnaHQpO1xuXHQgIH1cbiAgXG5cdCAgdmFyIGRpYWdyYW1XaXRoTWFyZ2luID0gX3RoaXMuY29uZmlnLndpZHRoICsgMiAqIF90aGlzLmNvbmZpZy5tYXJnaW47XG4gIFxuXHQgIGlmIChfdGhpcy5jb25maWcuY29sdW1uc0NvdW50ID09IDApIHtcblx0XHRfdGhpcy5jb25maWcuY29sdW1uc0NvdW50ID0gcGFyc2VJbnQoXG5cdFx0ICBfdGhpcy5jYW52YXMud2lkdGggLyBkaWFncmFtV2l0aE1hcmdpblxuXHRcdCk7XG5cdCAgfVxuICBcblx0ICB2YXIgbWF4V2lkdGggPSBfdGhpcy5jb25maWcuY29sdW1uc0NvdW50ICogZGlhZ3JhbVdpdGhNYXJnaW47XG5cdCAgdmFyIG1hcmdpblNjcmVlbiA9IHBhcnNlSW50KF90aGlzLmNhbnZhcy53aWR0aCkgLyAyIC0gbWF4V2lkdGggLyAyO1xuICBcblx0ICBfdGhpcy5jb250ZXh0LnJvdGF0ZSgyICogTWF0aC5QSSk7XG4gIFxuXHQgIHZhciBjb3VudE9ycGhhbkRlbWFuZCA9IDA7XG5cdCAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGhpcy5kaWFncmFtcy5sZW5ndGg7IGkrKykge1xuXHRcdGlmIChfdGhpcy5kaWFncmFtc1tpXS5vcnBoYW4pIHtcblx0XHQgIHZhciBwb3NpdGlvblggPVxuXHRcdFx0bWFyZ2luU2NyZWVuICtcblx0XHRcdF90aGlzLmNvbmZpZy5tYXJnaW4gK1xuXHRcdFx0cGFyc2VJbnQoY291bnRPcnBoYW5EZW1hbmQgJSBfdGhpcy5jb25maWcuY29sdW1uc0NvdW50KSAqXG5cdFx0XHQgIChfdGhpcy5jb25maWcud2lkdGggKyAyICogX3RoaXMuY29uZmlnLm1hcmdpbik7XG5cdFx0ICB2YXIgcG9zaXRpb25ZID1cblx0XHRcdF90aGlzLmNvbmZpZy5tYXJnaW4gK1xuXHRcdFx0cGFyc2VJbnQoY291bnRPcnBoYW5EZW1hbmQgLyBfdGhpcy5jb25maWcuY29sdW1uc0NvdW50KSAqXG5cdFx0XHQgIChfdGhpcy5jb25maWcuaGVpZ2h0ICsgMiAqIF90aGlzLmNvbmZpZy5tYXJnaW4pO1xuXHRcdCAgX3RoaXMuY29udGV4dC5maWxsU3R5bGUgPSBfdGhpcy5kaWFncmFtc1tpXS5iZ0NvbG9yO1xuXHRcdCAgX3RoaXMuY29udGV4dC5zdHJva2VTdHlsZSA9IF90aGlzLmRpYWdyYW1zW2ldLmJnQ29sb3I7XG5cdFx0ICByb3VuZFJlY3QoXG5cdFx0XHRfdGhpcy5jb250ZXh0LFxuXHRcdFx0cG9zaXRpb25YLFxuXHRcdFx0cG9zaXRpb25ZLFxuXHRcdFx0X3RoaXMuY29uZmlnLndpZHRoLFxuXHRcdFx0X3RoaXMuY29uZmlnLmhlaWdodCxcblx0XHRcdF90aGlzLmNvbmZpZy5yYWRpdXMsXG5cdFx0XHRfdGhpcy5jb25maWcuaGlkZGVuQmdcblx0XHQgICk7XG5cdFx0ICAvL1xuXHRcdCAgdmFyIG5vZGVUZXh0ID0gX3RoaXMuY29udGV4dDtcblx0XHQgIG5vZGVUZXh0LmZpbGxTdHlsZSA9IF90aGlzLmRpYWdyYW1zW2ldLmNvbG9yO1xuXHRcdCAgbm9kZVRleHQuZm9udCA9IF90aGlzLmNvbmZpZy5mb250U2l6ZSArIFwicHggXCIgKyBfdGhpcy5jb25maWcuZm9udEZhbWlseTtcblx0XHQgIHdyYXBUZXh0KFxuXHRcdFx0X3RoaXMuY29udGV4dCxcblx0XHRcdF90aGlzLmRpYWdyYW1zW2ldLnRleHQsXG5cdFx0XHRwb3NpdGlvblggKyBfdGhpcy5jb25maWcucGFkZGluZyxcblx0XHRcdHBvc2l0aW9uWSxcblx0XHRcdF90aGlzLmNvbmZpZy53aWR0aCAtIF90aGlzLmNvbmZpZy5wYWRkaW5nICogMixcblx0XHRcdF90aGlzLmNvbmZpZy5oZWlnaHQsXG5cdFx0XHRfdGhpcy5jb25maWcuZm9udFNpemUgKyBfdGhpcy5jb25maWcuZm9udFNpemUgKiAwLjJcblx0XHQgICk7XG4gIFxuXHRcdCAgY291bnRPcnBoYW5EZW1hbmQrKztcblx0XHR9XG5cdCAgfVxuICBcblx0ICAvL0NBTENVTEFURSBYIFkgTk9UIE9SUEhBTlMgRElBR1JBTVNcbiAgXG5cdCAgdmFyIG1hcmdpblRvcE5vdE9ycGhhbnMgPVxuXHRcdF90aGlzLmNvbmZpZy5oZWlnaHQgK1xuXHRcdDMgKiBfdGhpcy5jb25maWcubWFyZ2luICtcblx0XHRwYXJzZUludCgoY291bnRPcnBoYW5EZW1hbmQgLSAxKSAvIF90aGlzLmNvbmZpZy5jb2x1bW5zQ291bnQpICpcblx0XHQgIChfdGhpcy5jb25maWcuaGVpZ2h0ICsgMiAqIF90aGlzLmNvbmZpZy5tYXJnaW4pO1xuICBcblx0ICBpZiAoaXNOYU4obWFyZ2luVG9wTm90T3JwaGFucykpIHtcblx0XHRtYXJnaW5Ub3BOb3RPcnBoYW5zID0gX3RoaXMuY29uZmlnLm1hcmdpbjtcblx0ICB9XG4gIFxuXHQgIGZvciAodmFyIGkgPSAwOyBpIDwgX3RoaXMuZGlhZ3JhbXMubGVuZ3RoOyBpKyspIHtcblx0XHRpZiAoIV90aGlzLmRpYWdyYW1zW2ldLm9ycGhhbikge1xuXHRcdCAgdmFyIG1heENvbHVtbnNJbkxpbmUgPSBnZXRPYmpCeUlkKFxuXHRcdFx0X3RoaXMuY29uZmlnLmxpbmVzQ291bnQsXG5cdFx0XHRfdGhpcy5kaWFncmFtc1tpXS55XG5cdFx0ICApLmNvdW50O1xuXHRcdCAgdmFyIHJhdGlvID0gbWF4V2lkdGggLyBtYXhDb2x1bW5zSW5MaW5lO1xuXHRcdCAgdmFyIHBvc2l0aW9uWCA9XG5cdFx0XHRtYXJnaW5TY3JlZW4gK1xuXHRcdFx0cmF0aW8gKiBfdGhpcy5kaWFncmFtc1tpXS54ICtcblx0XHRcdChyYXRpbyAvIDIgLSBfdGhpcy5jb25maWcud2lkdGggLyAyKSAtXG5cdFx0XHRyYXRpbztcblx0XHQgIHZhciBwb3NpdGlvblkgPVxuXHRcdFx0bWFyZ2luVG9wTm90T3JwaGFucyArXG5cdFx0XHRNYXRoLmFicyhfdGhpcy5jb25maWcuY29sdW1uTG93ZXIpICpcblx0XHRcdCAgKF90aGlzLmNvbmZpZy5oZWlnaHQgKyAyICogX3RoaXMuY29uZmlnLm1hcmdpbikgK1xuXHRcdFx0X3RoaXMuZGlhZ3JhbXNbaV0ueSAqIChfdGhpcy5jb25maWcuaGVpZ2h0ICsgMiAqIF90aGlzLmNvbmZpZy5tYXJnaW4pO1xuXHRcdCAgX3RoaXMuZGlhZ3JhbXNbaV0ubGVmdCA9IHBvc2l0aW9uWDtcblx0XHQgIF90aGlzLmRpYWdyYW1zW2ldLnRvcCA9IHBvc2l0aW9uWTtcblx0XHR9XG5cdCAgfVxuICBcblx0ICAvL0RSQVcgTElORVNcbiAgXG5cdCAgZm9yICh2YXIgaSA9IDA7IGkgPCBfdGhpcy5kaWFncmFtcy5sZW5ndGg7IGkrKykge1xuXHRcdGlmICghX3RoaXMuZGlhZ3JhbXNbaV0ub3JwaGFuKSB7XG5cdFx0ICBmb3IgKHZhciBqID0gMDsgaiA8IF90aGlzLmRpYWdyYW1zW2ldLnBhcmVudHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdHZhciB0bXBPYmogPSBnZXRPYmpCeUlkKFxuXHRcdFx0ICBfdGhpcy5kaWFncmFtcyxcblx0XHRcdCAgX3RoaXMuZGlhZ3JhbXNbaV0ucGFyZW50c1tqXVxuXHRcdFx0KTtcblx0XHRcdHZhciBpbnZlcnRQYXJlbnQgPSBmYWxzZTtcblx0XHRcdHZhciBpc0Rpc3RhbnQgPSBmYWxzZTtcblx0XHRcdHZhciBhdXRvUmVmID0gZmFsc2U7XG5cdFx0XHR2YXIgY291bnREaXN0YW50ID0gMDtcblx0XHRcdHZhciBjb3VudEludmVydFBhcmVudCA9IDA7XG4gIFxuXHRcdFx0aWYgKF90aGlzLmRpYWdyYW1zW2ldLmlkID09IHRtcE9iai5pZCkge1xuXHRcdFx0ICBhdXRvUmVmID0gdHJ1ZTtcblx0XHRcdH0gZWxzZSBpZiAoX3RoaXMuZGlhZ3JhbXNbaV0ueSA8IHRtcE9iai55KSB7XG5cdFx0XHQgIGludmVydFBhcmVudCA9IHRydWU7XG5cdFx0XHR9IGVsc2UgaWYgKF90aGlzLmRpYWdyYW1zW2ldLnkgLSB0bXBPYmoueSA+IDEpIHtcblx0XHRcdCAgaXNEaXN0YW50ID0gdHJ1ZTtcblx0XHRcdH1cbiAgXG5cdFx0XHRpZiAoX3RoaXMuY29udGV4dC5zZXRMaW5lRGFzaCkge1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LnNldExpbmVEYXNoKFtfdGhpcy5jb25maWcubGluZVdpZHRoLCAwXSk7XG5cdFx0XHR9XG4gIFxuXHRcdFx0X3RoaXMuY29udGV4dC5zdHJva2VTdHlsZSA9XG5cdFx0XHQgIF90aGlzLmNvbmZpZy5saW5lQ29sb3IgfHwgX3RoaXMuZGlhZ3JhbXNbaV0uYmdDb2xvcjtcblx0XHRcdF90aGlzLmNvbnRleHQuZmlsbFN0eWxlID1cblx0XHRcdCAgX3RoaXMuY29uZmlnLmxpbmVDb2xvciB8fCBfdGhpcy5kaWFncmFtc1tpXS5iZ0NvbG9yO1xuICBcblx0XHRcdHZhciBkaWZmZXJlbmNlID0gMDtcbiAgXG5cdFx0XHRpZiAoYXV0b1JlZikge1xuXHRcdFx0ICBkaWZmZXJlbmNlID1cblx0XHRcdFx0X3RoaXMuY29uZmlnLm1hcmdpbiAvIDIgLVxuXHRcdFx0XHQoX3RoaXMuY29uZmlnLm1hcmdpbiAvIF90aGlzLmNvbmZpZy5jb2x1bW5zQ291bnQpICpcblx0XHRcdFx0ICBfdGhpcy5kaWFncmFtc1tpXS54O1xuICBcblx0XHRcdCAgaWYgKCFpc0Zpbml0ZShkaWZmZXJlbmNlKSkge1xuXHRcdFx0XHRkaWZmZXJlbmNlID0gMDtcblx0XHRcdCAgfVxuICBcblx0XHRcdCAgX3RoaXMuY29udGV4dC5iZWdpblBhdGgoKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5tb3ZlVG8oXG5cdFx0XHRcdHRtcE9iai5sZWZ0ICtcblx0XHRcdFx0ICBfdGhpcy5jb25maWcud2lkdGggLyAyICtcblx0XHRcdFx0ICBkaWZmZXJlbmNlICogLTEgLVxuXHRcdFx0XHQgIGRpZmZlcmVuY2UsXG5cdFx0XHRcdHRtcE9iai50b3AgKyBfdGhpcy5jb25maWcuaGVpZ2h0XG5cdFx0XHQgICk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubGluZVRvKFxuXHRcdFx0XHR0bXBPYmoubGVmdCArXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLndpZHRoIC8gMiArXG5cdFx0XHRcdCAgZGlmZmVyZW5jZSAqIC0xIC1cblx0XHRcdFx0ICBkaWZmZXJlbmNlLFxuXHRcdFx0XHR0bXBPYmoudG9wICsgX3RoaXMuY29uZmlnLmhlaWdodCArIF90aGlzLmNvbmZpZy5tYXJnaW4gLyAyLjVcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5saW5lVG8oXG5cdFx0XHRcdHRtcE9iai5sZWZ0ICtcblx0XHRcdFx0ICBfdGhpcy5jb25maWcud2lkdGggLyAyICtcblx0XHRcdFx0ICBkaWZmZXJlbmNlICogLTEgK1xuXHRcdFx0XHQgIGRpZmZlcmVuY2UsXG5cdFx0XHRcdHRtcE9iai50b3AgKyBfdGhpcy5jb25maWcuaGVpZ2h0ICsgX3RoaXMuY29uZmlnLm1hcmdpbiAvIDIuNVxuXHRcdFx0ICApO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmxpbmVUbyhcblx0XHRcdFx0dG1wT2JqLmxlZnQgK1xuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy53aWR0aCAvIDIgK1xuXHRcdFx0XHQgIGRpZmZlcmVuY2UgKiAtMSArXG5cdFx0XHRcdCAgZGlmZmVyZW5jZSxcblx0XHRcdFx0dG1wT2JqLnRvcCArIF90aGlzLmNvbmZpZy5oZWlnaHQgKyBfdGhpcy5jb25maWcuYXJyb3dXaWR0aCAvIDJcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5zdHJva2UoKTtcbiAgXG5cdFx0XHQgIF90aGlzLmNvbnRleHQuYmVnaW5QYXRoKCk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubW92ZVRvKFxuXHRcdFx0XHR0bXBPYmoubGVmdCArXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLndpZHRoIC8gMiArXG5cdFx0XHRcdCAgZGlmZmVyZW5jZSAqIC0xICtcblx0XHRcdFx0ICBkaWZmZXJlbmNlLFxuXHRcdFx0XHR0bXBPYmoudG9wICsgX3RoaXMuY29uZmlnLmhlaWdodFxuXHRcdFx0ICApO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmxpbmVUbyhcblx0XHRcdFx0dG1wT2JqLmxlZnQgK1xuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy53aWR0aCAvIDIgLVxuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy5hcnJvd1dpZHRoIC8gMiArXG5cdFx0XHRcdCAgZGlmZmVyZW5jZSAqIC0xICtcblx0XHRcdFx0ICBkaWZmZXJlbmNlLFxuXHRcdFx0XHR0bXBPYmoudG9wICsgX3RoaXMuY29uZmlnLmhlaWdodCArIF90aGlzLmNvbmZpZy5hcnJvd1dpZHRoXG5cdFx0XHQgICk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubGluZVRvKFxuXHRcdFx0XHR0bXBPYmoubGVmdCArXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLndpZHRoIC8gMiArXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLmFycm93V2lkdGggLyAyICtcblx0XHRcdFx0ICBkaWZmZXJlbmNlICogLTEgK1xuXHRcdFx0XHQgIGRpZmZlcmVuY2UsXG5cdFx0XHRcdHRtcE9iai50b3AgKyBfdGhpcy5jb25maWcuaGVpZ2h0ICsgX3RoaXMuY29uZmlnLmFycm93V2lkdGhcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5maWxsKCk7XG5cdFx0XHR9IGVsc2UgaWYgKGludmVydFBhcmVudCkge1xuXHRcdFx0ICBpZiAoX3RoaXMuY29uZmlnLmxpbmVEaWZmKSB7XG5cdFx0XHRcdGRpZmZlcmVuY2UgPVxuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy5tYXJnaW4gLyAyIC1cblx0XHRcdFx0ICAoX3RoaXMuY29uZmlnLm1hcmdpbiAvIF90aGlzLmNvbmZpZy5jb2x1bW5zQ291bnQpICpcblx0XHRcdFx0XHRfdGhpcy5kaWFncmFtc1tpXS54ICtcblx0XHRcdFx0ICAoX3RoaXMuY29uZmlnLm1hcmdpbiAtXG5cdFx0XHRcdFx0KF90aGlzLmNvbmZpZy5hcnJvd1dpZHRoICtcblx0XHRcdFx0XHQgIF90aGlzLmNvbmZpZy5saW5lV2lkdGggKiAyICogY291bnRJbnZlcnRQYXJlbnQpKTtcblx0XHRcdCAgfVxuICBcblx0XHRcdCAgaWYgKF90aGlzLmNvbnRleHQuc2V0TGluZURhc2gpIHtcblx0XHRcdFx0X3RoaXMuY29udGV4dC5zZXRMaW5lRGFzaChbXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLmxpbmVXaWR0aCxcblx0XHRcdFx0ICBfdGhpcy5jb25maWcubGluZVdpZHRoXG5cdFx0XHRcdF0pO1xuXHRcdFx0ICB9XG4gIFxuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0Lm1vdmVUbyhcblx0XHRcdFx0X3RoaXMuZGlhZ3JhbXNbaV0ubGVmdCArIF90aGlzLmNvbmZpZy53aWR0aCAvIDIgKyBkaWZmZXJlbmNlLFxuXHRcdFx0XHRfdGhpcy5kaWFncmFtc1tpXS50b3AgKyBfdGhpcy5jb25maWcuaGVpZ2h0IC8gMiArIGRpZmZlcmVuY2Vcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5saW5lVG8oXG5cdFx0XHRcdF90aGlzLmRpYWdyYW1zW2ldLmxlZnQgK1xuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy53aWR0aCArXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLm1hcmdpbiArXG5cdFx0XHRcdCAgZGlmZmVyZW5jZSxcblx0XHRcdFx0X3RoaXMuZGlhZ3JhbXNbaV0udG9wICsgX3RoaXMuY29uZmlnLmhlaWdodCAvIDIgKyBkaWZmZXJlbmNlXG5cdFx0XHQgICk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubGluZVRvKFxuXHRcdFx0XHRfdGhpcy5kaWFncmFtc1tpXS5sZWZ0ICtcblx0XHRcdFx0ICBfdGhpcy5jb25maWcud2lkdGggK1xuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy5tYXJnaW4gK1xuXHRcdFx0XHQgIGRpZmZlcmVuY2UsXG5cdFx0XHRcdHRtcE9iai50b3AgLSBfdGhpcy5jb25maWcubWFyZ2luICsgZGlmZmVyZW5jZVxuXHRcdFx0ICApO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmxpbmVUbyhcblx0XHRcdFx0dG1wT2JqLmxlZnQgKyBfdGhpcy5jb25maWcud2lkdGggLyAyICsgZGlmZmVyZW5jZSxcblx0XHRcdFx0dG1wT2JqLnRvcCAtIF90aGlzLmNvbmZpZy5tYXJnaW4gKyBkaWZmZXJlbmNlXG5cdFx0XHQgICk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubGluZVRvKFxuXHRcdFx0XHR0bXBPYmoubGVmdCArIF90aGlzLmNvbmZpZy53aWR0aCAvIDIgKyBkaWZmZXJlbmNlLFxuXHRcdFx0XHR0bXBPYmoudG9wIC0gX3RoaXMuY29uZmlnLmFycm93V2lkdGggKyBkaWZmZXJlbmNlXG5cdFx0XHQgICk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubGluZVdpZHRoID0gX3RoaXMuY29uZmlnLmxpbmVXaWR0aDtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5zdHJva2UoKTtcbiAgXG5cdFx0XHQgIF90aGlzLmNvbnRleHQuYmVnaW5QYXRoKCk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubW92ZVRvKFxuXHRcdFx0XHR0bXBPYmoubGVmdCArIF90aGlzLmNvbmZpZy53aWR0aCAvIDIgKyBkaWZmZXJlbmNlLFxuXHRcdFx0XHR0bXBPYmoudG9wXG5cdFx0XHQgICk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubGluZVRvKFxuXHRcdFx0XHR0bXBPYmoubGVmdCArXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLndpZHRoIC8gMiAtXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLmFycm93V2lkdGggLyAyICtcblx0XHRcdFx0ICBkaWZmZXJlbmNlLFxuXHRcdFx0XHR0bXBPYmoudG9wIC0gX3RoaXMuY29uZmlnLmFycm93V2lkdGhcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5saW5lVG8oXG5cdFx0XHRcdHRtcE9iai5sZWZ0ICtcblx0XHRcdFx0ICBfdGhpcy5jb25maWcud2lkdGggLyAyICtcblx0XHRcdFx0ICBfdGhpcy5jb25maWcuYXJyb3dXaWR0aCAvIDIgK1xuXHRcdFx0XHQgIGRpZmZlcmVuY2UsXG5cdFx0XHRcdHRtcE9iai50b3AgLSBfdGhpcy5jb25maWcuYXJyb3dXaWR0aFxuXHRcdFx0ICApO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmZpbGwoKTtcblx0XHRcdH0gZWxzZSBpZiAoaXNEaXN0YW50KSB7XG5cdFx0XHQgIGlmIChfdGhpcy5jb25maWcubGluZURpZmYpIHtcblx0XHRcdFx0ZGlmZmVyZW5jZSA9XG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLm1hcmdpbiAvIDIgLVxuXHRcdFx0XHQgIChfdGhpcy5jb25maWcubWFyZ2luIC8gX3RoaXMuY29uZmlnLmNvbHVtbnNDb3VudCkgKlxuXHRcdFx0XHRcdF90aGlzLmRpYWdyYW1zW2ldLnggK1xuXHRcdFx0XHQgIChfdGhpcy5jb25maWcubWFyZ2luIC1cblx0XHRcdFx0XHQoX3RoaXMuY29uZmlnLmFycm93V2lkdGggK1xuXHRcdFx0XHRcdCAgX3RoaXMuY29uZmlnLmxpbmVXaWR0aCAqIDIgKiBjb3VudERpc3RhbnQpKTtcblx0XHRcdCAgfVxuICBcblx0XHRcdCAgY291bnREaXN0YW50Kys7XG4gIFxuXHRcdFx0ICBpZiAoIWlzRmluaXRlKGRpZmZlcmVuY2UpKSB7XG5cdFx0XHRcdGRpZmZlcmVuY2UgPSAwO1xuXHRcdFx0ICB9XG4gIFxuXHRcdFx0ICBpZiAoX3RoaXMuY29udGV4dC5zZXRMaW5lRGFzaCkge1xuXHRcdFx0XHRfdGhpcy5jb250ZXh0LnNldExpbmVEYXNoKFtcblx0XHRcdFx0ICBfdGhpcy5jb25maWcubGluZVdpZHRoLFxuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy5saW5lV2lkdGhcblx0XHRcdFx0XSk7XG5cdFx0XHQgIH1cbiAgXG5cdFx0XHQgIF90aGlzLmNvbnRleHQuYmVnaW5QYXRoKCk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubW92ZVRvKFxuXHRcdFx0XHRfdGhpcy5kaWFncmFtc1tpXS5sZWZ0ICsgX3RoaXMuY29uZmlnLndpZHRoIC8gMiArIGRpZmZlcmVuY2UgKiAtMSxcblx0XHRcdFx0X3RoaXMuZGlhZ3JhbXNbaV0udG9wXG5cdFx0XHQgICk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubGluZVRvKFxuXHRcdFx0XHRfdGhpcy5kaWFncmFtc1tpXS5sZWZ0ICsgX3RoaXMuY29uZmlnLndpZHRoIC8gMiArIGRpZmZlcmVuY2UgKiAtMSxcblx0XHRcdFx0X3RoaXMuZGlhZ3JhbXNbaV0udG9wIC0gX3RoaXMuY29uZmlnLm1hcmdpbiArIGRpZmZlcmVuY2Vcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5saW5lVG8oXG5cdFx0XHRcdHRtcE9iai5sZWZ0ICsgX3RoaXMuY29uZmlnLndpZHRoIC8gMiArIGRpZmZlcmVuY2UgKiAtMSxcblx0XHRcdFx0X3RoaXMuZGlhZ3JhbXNbaV0udG9wIC0gX3RoaXMuY29uZmlnLm1hcmdpbiArIGRpZmZlcmVuY2Vcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5saW5lVG8oXG5cdFx0XHRcdHRtcE9iai5sZWZ0ICsgX3RoaXMuY29uZmlnLndpZHRoIC8gMiArIGRpZmZlcmVuY2UgKiAtMSxcblx0XHRcdFx0dG1wT2JqLnRvcCArXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLmhlaWdodCArXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLm1hcmdpbiArXG5cdFx0XHRcdCAgZGlmZmVyZW5jZVxuXHRcdFx0ICApO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmxpbmVUbyhcblx0XHRcdFx0dG1wT2JqLmxlZnQgKyBfdGhpcy5jb25maWcud2lkdGggLyAyICsgZGlmZmVyZW5jZSAqIC0xLFxuXHRcdFx0XHR0bXBPYmoudG9wICsgX3RoaXMuY29uZmlnLmhlaWdodCArIF90aGlzLmNvbmZpZy5hcnJvd1dpZHRoIC8gMlxuXHRcdFx0ICApO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmxpbmVXaWR0aCA9IF90aGlzLmNvbmZpZy5saW5lV2lkdGg7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQuc3Ryb2tlKCk7XG4gIFxuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0Lm1vdmVUbyhcblx0XHRcdFx0dG1wT2JqLmxlZnQgKyBfdGhpcy5jb25maWcud2lkdGggLyAyICsgZGlmZmVyZW5jZSAqIC0xLFxuXHRcdFx0XHR0bXBPYmoudG9wICsgX3RoaXMuY29uZmlnLmhlaWdodFxuXHRcdFx0ICApO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmxpbmVUbyhcblx0XHRcdFx0dG1wT2JqLmxlZnQgK1xuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy53aWR0aCAvIDIgLVxuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy5hcnJvd1dpZHRoIC8gMiArXG5cdFx0XHRcdCAgZGlmZmVyZW5jZSAqIC0xLFxuXHRcdFx0XHR0bXBPYmoudG9wICsgX3RoaXMuY29uZmlnLmhlaWdodCArIF90aGlzLmNvbmZpZy5hcnJvd1dpZHRoXG5cdFx0XHQgICk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubGluZVRvKFxuXHRcdFx0XHR0bXBPYmoubGVmdCArXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLndpZHRoIC8gMiArXG5cdFx0XHRcdCAgX3RoaXMuY29uZmlnLmFycm93V2lkdGggLyAyICtcblx0XHRcdFx0ICBkaWZmZXJlbmNlICogLTEsXG5cdFx0XHRcdHRtcE9iai50b3AgKyBfdGhpcy5jb25maWcuaGVpZ2h0ICsgX3RoaXMuY29uZmlnLmFycm93V2lkdGhcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5maWxsKCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0ICAvL3ZhclxuXHRcdFx0ICBpZiAoX3RoaXMuY29uZmlnLmxpbmVEaWZmKSB7XG5cdFx0XHRcdGRpZmZlcmVuY2UgPVxuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy5tYXJnaW4gLyAyIC1cblx0XHRcdFx0ICAoX3RoaXMuY29uZmlnLm1hcmdpbiAvIF90aGlzLmNvbmZpZy5jb2x1bW5zQ291bnQpICpcblx0XHRcdFx0XHRfdGhpcy5kaWFncmFtc1tpXS54O1xuXHRcdFx0ICB9XG4gIFxuXHRcdFx0ICBpZiAoIWlzRmluaXRlKGRpZmZlcmVuY2UpKSB7XG5cdFx0XHRcdGRpZmZlcmVuY2UgPSAwO1xuXHRcdFx0ICB9XG4gIFxuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmJlZ2luUGF0aCgpO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0Lm1vdmVUbyhcblx0XHRcdFx0X3RoaXMuZGlhZ3JhbXNbaV0ubGVmdCArIF90aGlzLmNvbmZpZy53aWR0aCAvIDIgKyBkaWZmZXJlbmNlICogLTEsXG5cdFx0XHRcdF90aGlzLmRpYWdyYW1zW2ldLnRvcFxuXHRcdFx0ICApO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmxpbmVUbyhcblx0XHRcdFx0X3RoaXMuZGlhZ3JhbXNbaV0ubGVmdCArIF90aGlzLmNvbmZpZy53aWR0aCAvIDIgKyBkaWZmZXJlbmNlICogLTEsXG5cdFx0XHRcdF90aGlzLmRpYWdyYW1zW2ldLnRvcCAtIF90aGlzLmNvbmZpZy5tYXJnaW4gKyBkaWZmZXJlbmNlXG5cdFx0XHQgICk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQubGluZVRvKFxuXHRcdFx0XHR0bXBPYmoubGVmdCArIF90aGlzLmNvbmZpZy53aWR0aCAvIDIgKyBkaWZmZXJlbmNlICogLTEsXG5cdFx0XHRcdHRtcE9iai50b3AgK1xuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy5oZWlnaHQgK1xuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy5tYXJnaW4gK1xuXHRcdFx0XHQgIGRpZmZlcmVuY2Vcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5saW5lVG8oXG5cdFx0XHRcdHRtcE9iai5sZWZ0ICsgX3RoaXMuY29uZmlnLndpZHRoIC8gMiArIGRpZmZlcmVuY2UgKiAtMSxcblx0XHRcdFx0dG1wT2JqLnRvcCArIF90aGlzLmNvbmZpZy5oZWlnaHQgKyBfdGhpcy5jb25maWcuYXJyb3dXaWR0aCAvIDJcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5saW5lV2lkdGggPSBfdGhpcy5jb25maWcubGluZVdpZHRoO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LnN0cm9rZSgpO1xuICBcblx0XHRcdCAgX3RoaXMuY29udGV4dC5iZWdpblBhdGgoKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5tb3ZlVG8oXG5cdFx0XHRcdHRtcE9iai5sZWZ0ICsgX3RoaXMuY29uZmlnLndpZHRoIC8gMiArIGRpZmZlcmVuY2UgKiAtMSxcblx0XHRcdFx0dG1wT2JqLnRvcCArIF90aGlzLmNvbmZpZy5oZWlnaHRcblx0XHRcdCAgKTtcblx0XHRcdCAgX3RoaXMuY29udGV4dC5saW5lVG8oXG5cdFx0XHRcdHRtcE9iai5sZWZ0ICtcblx0XHRcdFx0ICBfdGhpcy5jb25maWcud2lkdGggLyAyIC1cblx0XHRcdFx0ICBfdGhpcy5jb25maWcuYXJyb3dXaWR0aCAvIDIgK1xuXHRcdFx0XHQgIGRpZmZlcmVuY2UgKiAtMSxcblx0XHRcdFx0dG1wT2JqLnRvcCArIF90aGlzLmNvbmZpZy5oZWlnaHQgKyBfdGhpcy5jb25maWcuYXJyb3dXaWR0aFxuXHRcdFx0ICApO1xuXHRcdFx0ICBfdGhpcy5jb250ZXh0LmxpbmVUbyhcblx0XHRcdFx0dG1wT2JqLmxlZnQgK1xuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy53aWR0aCAvIDIgK1xuXHRcdFx0XHQgIF90aGlzLmNvbmZpZy5hcnJvd1dpZHRoIC8gMiArXG5cdFx0XHRcdCAgZGlmZmVyZW5jZSAqIC0xLFxuXHRcdFx0XHR0bXBPYmoudG9wICsgX3RoaXMuY29uZmlnLmhlaWdodCArIF90aGlzLmNvbmZpZy5hcnJvd1dpZHRoXG5cdFx0XHQgICk7XG5cdFx0XHQgIF90aGlzLmNvbnRleHQuZmlsbCgpO1xuXHRcdFx0fVxuXHRcdCAgfVxuXHRcdH1cblx0ICB9XG4gIFxuXHQgIC8vRFJBVyBOT1QgT1JQSEFOUyBESUFHUkFNU1xuICBcblx0ICBmb3IgKHZhciBpID0gMDsgaSA8IF90aGlzLmRpYWdyYW1zLmxlbmd0aDsgaSsrKSB7XG5cdFx0aWYgKCFfdGhpcy5kaWFncmFtc1tpXS5vcnBoYW4pIHtcblx0XHQgIHZhciBwb3NpdGlvblggPSBfdGhpcy5kaWFncmFtc1tpXS5sZWZ0O1xuXHRcdCAgdmFyIHBvc2l0aW9uWSA9IF90aGlzLmRpYWdyYW1zW2ldLnRvcDtcblx0XHQgIF90aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gX3RoaXMuZGlhZ3JhbXNbaV0uYmdDb2xvcjtcblx0XHQgIF90aGlzLmNvbnRleHQuc3Ryb2tlU3R5bGUgPSBfdGhpcy5kaWFncmFtc1tpXS5iZ0NvbG9yO1xuXHRcdCAgcm91bmRSZWN0KFxuXHRcdFx0X3RoaXMuY29udGV4dCxcblx0XHRcdHBvc2l0aW9uWCxcblx0XHRcdHBvc2l0aW9uWSxcblx0XHRcdF90aGlzLmNvbmZpZy53aWR0aCxcblx0XHRcdF90aGlzLmNvbmZpZy5oZWlnaHQsXG5cdFx0XHRfdGhpcy5jb25maWcucmFkaXVzLFxuXHRcdFx0X3RoaXMuY29uZmlnLmhpZGRlbkJnXG5cdFx0ICApO1xuICBcblx0XHQgIHZhciBub2RlVGV4dCA9IF90aGlzLmNvbnRleHQ7XG5cdFx0ICBub2RlVGV4dC5maWxsU3R5bGUgPSBfdGhpcy5kaWFncmFtc1tpXS5jb2xvcjtcblx0XHQgIG5vZGVUZXh0LmZvbnQgPSBfdGhpcy5jb25maWcuZm9udFNpemUgKyBcInB4IFwiICsgX3RoaXMuY29uZmlnLmZvbnRGYW1pbHk7XG5cdFx0ICB3cmFwVGV4dChcblx0XHRcdF90aGlzLmNvbnRleHQsXG5cdFx0XHRfdGhpcy5kaWFncmFtc1tpXS50ZXh0LFxuXHRcdFx0cG9zaXRpb25YICsgX3RoaXMuY29uZmlnLnBhZGRpbmcsXG5cdFx0XHRwb3NpdGlvblksXG5cdFx0XHRfdGhpcy5jb25maWcud2lkdGggLSBfdGhpcy5jb25maWcucGFkZGluZyAqIDIsXG5cdFx0XHRfdGhpcy5jb25maWcuaGVpZ2h0LFxuXHRcdFx0X3RoaXMuY29uZmlnLmZvbnRTaXplICsgX3RoaXMuY29uZmlnLmZvbnRTaXplICogMC4yXG5cdFx0ICApO1xuXHRcdH1cblx0ICB9XG5cdH07XG4gIFxuICBcblx0dGhpcy5pbml0KGRhdGEpO1xuICB9OyJdLCJzb3VyY2VSb290IjoiIn0=